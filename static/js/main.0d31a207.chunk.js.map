{"version":3,"sources":["MyTime.js","components/Header/Header.jsx","components/ItemTask/ItemTask.jsx","components/Inbox/Inbox.jsx","components/Footer/Footer.jsx","components/AddTaskScreen/AddTaskScreen.jsx","components/ItemSetting/ItemSetting.jsx","components/SettingsScreen/SettingsScreen.jsx","App.js","index.js"],"names":["MyTime","value","day","month","year","this","ShiftZero","hours","minutes","seconds","date","MakeMyTime","getHours","getMinutes","getSeconds","MakeMyDate","getDate","getMonth","getFullYear","slice","getDay","my_date","my_time","split","reverse","join","Date","in_ms","MyDateAndMyTimeToDate","sign","Math","ms","abs","floor","Header","state","curDate","DateToMyDateNamed","curTime","DateToMyTime","interval","setInterval","setState","clearInterval","className","title","icon","icons","onClick","props","onSettingsBtnClick","React","Component","ItemTask","isExpanded","swipe","OnMouseDownHandler","bind","OnMouseUpHandler","OnMouseMoveHandler","OnMouseLeaveHandler","TimeIconData","e","offset","last_x","screenX","is_expanded","x","onSwipe","task","time_left","MyDateAndMyTimeUntilNow","time","hours_str","minutes_str","color","green","desc_class","style","marginLeft","time_icon","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","name","desc","Inbox","OnItemSwipeHandler","OnMouseWheel","onRemoveTask","onWheel","tasks","map","key","Footer","r_btn_icon","zIndex","visibility","lBtn","isVisible","rBtn","g_old_state","AddTaskScreen","DefaultState","OnSubmitClickHandler","OnInputChangeHandler","OnClearClickHandler","OnDatePickerChange","DateToMyDate","undefined","Object","assign","event","target","length","alert","ValidateInputs","onSubmitHandler","preventDefault","type","placeholder","onChange","selected","minDate","timeInputLabel","timeFormat","dateFormat","showTimeInput","ItemSetting","index","class_name","item","isSupported","OnCheckboxHandler","call","checked","isAllowed","SettingsScreen","settings","OnSettingsChange","items","onSettingsChange","DB","i","push","String","GetRandomInt","min","max","ceil","random","GenerateTime","now","min_hours","max_hours","GenerateDate","min_date","max_date","isNotified","m","setMinutes","SortTasks","UntileNowTime","active","filter","sort","first","second","failed","concat","indexOf","splice","Logic","db","isChanged","RequestNotificationPermission","Audio","notification_interval","is_supported","Notification","requestPermission","then","permission","catch","find","body","onclick","forEach","App","logic","Screens","AddTask","Settings","freeze","HeaderSettingsBtnHandler","FooterRBtnHandler","FooterLBtnHandler","InboxRemoveTaskHandler","AddTaskSubmitHandler","screen_stack","CurrentScreen","PushScreen","PopScreen","ShowNotifications","forceUpdate","RemoveTask","screen","pop","content","r_btn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAiEeA,E,uGA1DMC,GACb,OAAQA,EAAQ,GAAM,IAAMA,EAAQA,I,mCAGQ,IAA9BC,EAA6B,uDAAvB,EAAGC,EAAoB,uDAAZ,EAAGC,EAAS,uDAAF,EACzC,OAAOC,KAAKC,UAAUJ,GAAO,IAAMG,KAAKC,UAAUH,GAAS,IAAME,KAAKC,UAAUF,K,mCAG5B,IAAtCG,EAAqC,uDAA7B,EAAGC,EAA0B,uDAAhB,EAAGC,EAAa,uDAAH,EAChD,OAAOJ,KAAKC,UAAUC,GAAS,IAAMF,KAAKC,UAAUE,GAAW,IAAMH,KAAKC,UAAUG,K,mCAGpEC,GAChB,OAAOL,KAAKM,WAAWD,EAAKE,WAAYF,EAAKG,aAAcH,EAAKI,gB,mCAGhDJ,GAChB,OAAOL,KAAKU,WAAWL,EAAKM,UAAWN,EAAKO,WAAa,EAAGP,EAAKQ,iB,wCAG5CR,GACrB,IAEQP,EADY,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC3GO,EAAKO,WAAa,GAAIE,MAAM,EAAG,GAC/CjB,EAHK,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAG5DQ,EAAKU,UAAWD,MAAM,EAAG,GACzC,MAAM,GAAN,OAAUjB,EAAV,YAAiBC,EAAjB,YAA0BO,EAAKQ,iB,4CAGVG,EAASC,GAElC,OADAD,EAAUA,EAAQE,MAAM,KAAKC,UAAUC,KAAK,KACrC,IAAIC,KAAKL,EAAU,IAAMC,K,8CAGLD,EAASC,GACpC,IACMK,EADOtB,KAAKuB,sBAAsBP,EAASC,GAC5B,IAAII,KAEnBG,EAAOC,KAAKD,KAAKF,GAEnBI,EAAKJ,EACTI,EAAKD,KAAKE,IAAID,GACd,IAAMxB,EAAQuB,KAAKG,MAAMF,EAAE,MAC3BA,GAAc,KAARxB,EAAe,IAErB,IAAMC,EAAUsB,KAAKG,MAAMF,EAAE,KAK7B,OAJAA,GAAgB,GAAVvB,EAAe,IAId,CACHuB,GAAIJ,EACJlB,QAJYqB,KAAKG,MAAMF,EAAK,KAITF,EACnBrB,QAASA,EAAUqB,EACnBtB,MAAOA,EAAQsB,O,KCfZK,E,kDArCX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,QAASpC,EAAOqC,kBAAkB,IAAIX,MACtCY,QAAStC,EAAOuC,aAAa,IAAIb,OAL3B,E,gEASO,IAAD,OAChBrB,KAAKmC,SAAWC,aAAY,WACxB,EAAKC,SAAS,CAACN,QAASpC,EAAOqC,kBAAkB,IAAIX,QACrD,EAAKgB,SAAS,CAACJ,QAAStC,EAAOuC,aAAa,IAAIb,UACjD,O,6CAIHiB,cAActC,KAAKmC,Y,+BAGb,IAAD,OACL,OACI,4BAAQI,UAAU,UACd,yBAAKA,UAAU,oBACX,0BAAMA,UAAU,SAASC,MAAM,OAAM,kBAAC,IAAD,CAAiBC,KAAMC,OAC5D,0BAAMH,UAAU,SAASC,MAAM,WAC/BG,QAAS,WAAO,EAAKC,MAAMC,uBAAuB,kBAAC,IAAD,CAAiBJ,KAAMC,QAE7E,yBAAKH,UAAU,gBACX,0BAAMA,UAAU,cAAcvC,KAAK8B,MAAMC,SACzC,0BAAMQ,UAAU,cAAcvC,KAAK8B,MAAMG,e,GA/BxCa,IAAMC,WCmGZC,E,kDAlGX,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IAEDd,MAAQ,CACTmB,YAAY,EACZC,MAAO,MAGX,EAAKC,mBAAoB,EAAKA,mBAAmBC,KAAxB,gBACzB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,gBAC3B,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBAZL,E,+DAeAK,GACfzD,KAAKqC,SAAS,CAAEa,MAAO,CAACQ,OAAQ,EAAGC,OAAQF,EAAEG,a,0CAG7BH,GAChBzD,KAAKqC,SAAS,CAACa,MAAO,S,uCAGTO,GACb,GAAIzD,KAAK8B,MAAMoB,MAAO,CAClB,IAAMW,EAA2C,IAA5B7D,KAAK8B,MAAMoB,MAAMQ,QAAiB1D,KAAK8B,MAAMmB,WAAajD,KAAK8B,MAAMmB,WAC1FjD,KAAKqC,SAAS,CACVa,MAAO,KACPD,WAAYY,O,yCAKLJ,GACf,GAAIzD,KAAK8B,MAAMoB,MAAO,CAClB,IAAMY,EAAI9D,KAAK8B,MAAMoB,MAAMS,OACrBD,EAAS1D,KAAK8B,MAAMoB,MAAMQ,QAAUD,EAAEG,QAAUE,GAElDrC,KAAKE,IAAI+B,GADM,KAEf1D,KAAK4C,MAAMmB,QAAQ/D,KAAK4C,MAAMoB,MAC9BhE,KAAKqC,SAAS,CAACa,MAAO,QAEtBlD,KAAKqC,SAAS,CAAEa,MAAO,CAACQ,OAAQA,EAAQC,OAAQF,EAAEG,c,mCAKjD5C,EAASC,GAElB,OAAOtB,EAAO4B,sBAAsBP,EAASC,GAAW,IAAII,O,qCAK5D,IAAM4C,EAAYtE,EAAOuE,wBAAwBlE,KAAK4C,MAAMoB,KAAK3D,KAAML,KAAK4C,MAAMoB,KAAKG,MAEjFC,EAAaH,EAAU/D,MAAS+D,EAAU/D,MAAQ,SAAW,GAC7DmE,EAAeJ,EAAU9D,QAAW8D,EAAU9D,QAAU,WAAa,GAEvEmE,EAAQ,UACZ,GAAIL,EAAUvC,GAAK,EACf4C,EAAQ,cACL,CACH,IAAMC,EAASN,EAAU/D,MAAQ,EAAK,KAAO,KAE7CoE,EAAQ,KADKL,EAAU/D,OAAS,EAAK,KAAO,MACxBqE,EAAQ,KAGhC,MAAO,CACH/B,MAAO4B,EAAY,IAAMC,EACzBC,MAAOA,K,+BAKX,IAAME,EAAcxE,KAAK8B,MAAMmB,WAAc,kBAAoB,0BAC3DwB,EAASzE,KAAK8B,MAAMoB,MAAS,CAACwB,WAAY1E,KAAK8B,MAAMoB,MAAMQ,QAAU,GAEvEiB,EAAY3E,KAAKwD,eACrB,OACI,yBAAKiB,MAAOA,EAAOlC,UAAU,YAC7BqC,YAAa5E,KAAKmD,mBAAoB0B,UAAW7E,KAAKqD,iBAAkByB,YAAa9E,KAAKsD,mBAC1FyB,aAAc/E,KAAKuD,qBACf,0BAAMhB,UAAU,kBACR,0BAAMA,UAAU,mBAAmBvC,KAAK4C,MAAMoB,KAAKgB,MACnD,kBAAC,IAAD,CAAiBzC,UAAU,uBAAuBC,MAAOmC,EAAUnC,MAAOC,KAAMC,IAC/E+B,MAAO,CAACH,MAAOK,EAAUL,UAElC,0BAAM/B,UAAU,wBACZ,0BAAMA,UAAU,mBAAmBvC,KAAK4C,MAAMoB,KAAK3D,MACnD,0BAAMkC,UAAU,mBAAmBvC,KAAK4C,MAAMoB,KAAKG,OAEvD,0BAAM5B,UAAWiC,GAAaxE,KAAK4C,MAAMoB,KAAKiB,W,GA7FvCnC,IAAMC,WCyBdmC,E,kDA3BX,WAAYtC,GAAQ,IAAD,8BACf,cAAMA,IAEDuC,mBAAqB,EAAKA,mBAAmB/B,KAAxB,gBAC1B,EAAKgC,aAAe,EAAKA,aAAahC,KAAlB,gBAJL,E,+DAOAY,GACfhE,KAAK4C,MAAMyC,aAAarB,K,mCAGfP,M,+BAGH,IAAD,OACL,OACI,yBAAK6B,QAAStF,KAAKoF,aAAc7C,UAAU,SACvC,0BAAMA,UAAU,SAAhB,SACA,wBAAIA,UAAU,QACVvC,KAAK4C,MAAM2C,MAAMC,KAAI,SAAAxB,GAAI,OACpB,kBAAC,EAAD,CAAUD,QAAS,EAAKoB,mBAAoBnB,KAAMA,EAAMyB,IAAKzB,EAAKyB,e,GArBvE3C,IAAMC,WCmBX2C,E,uKAjBD,IAAD,OACCC,EAAajD,IACnB,OACI,yBAAKH,UAAU,SAASkC,MAAO,CAACmB,OAAO,WACnC,0BAAMrD,UAAU,eAAeC,MAAM,OAAOiC,MAAO,CAACoB,WAAa7F,KAAK4C,MAAMkD,KAAKC,UAAa,UAAY,UAC1GpD,QAAS,WAAO,EAAKC,MAAMkD,KAAKnD,YAC5B,kBAAC,IAAD,CAAiBF,KAAMC,OAE3B,0BAAMH,UAAU,gBAAgBC,MAAM,eAAeiC,MAAO,CAACoB,WAAa7F,KAAK4C,MAAMoD,KAAKD,UAAa,UAAY,UACnHpD,QAAS,WAAO,EAAKC,MAAMoD,KAAKrD,YAC5B,kBAAC,IAAD,CAAiBF,KAAMkD,U,GAXtB7C,IAAMC,W,yBCEvBkD,G,MAAc,MA+GHC,E,kDA5GX,WAAYtD,GACX,IAAD,8BACI,cAAMA,IAEDd,MAAQ,EAAKqE,eAElB,EAAKC,qBAAuB,EAAKA,qBAAqBhD,KAA1B,gBAC5B,EAAKiD,qBAAuB,EAAKA,qBAAqBjD,KAA1B,gBAC5B,EAAKkD,oBAAsB,EAAKA,oBAAoBlD,KAAzB,gBAC3B,EAAKmD,mBAAqB,EAAKA,mBAAmBnD,KAAxB,gBAR9B,E,2DAaI,MAAO,CACH4B,KAAM,GACNC,KAAM,GACN5E,KAAMV,EAAO6G,aAAa,IAAInF,MAC9B8C,KAAMxE,EAAOuC,aAAa,IAAIb,MAAQP,MAAM,GAAI,M,4CAKpDd,KAAKqC,SAASrC,KAAKmG,kB,kDAICM,IAAhBR,IACAA,EAAc,GACdS,OAAOC,OAAOV,EAAajG,KAAK8B,U,0CAKhCmE,EACAjG,KAAKqC,SAAS4D,GAEdA,EAAc,O,2CAIDW,GACjB5G,KAAKqC,SAAL,eAAgBuE,EAAMC,OAAO7B,KAAO4B,EAAMC,OAAOjH,U,uCAIjD,OAA+B,IAA3BI,KAAK8B,MAAMkD,KAAK8B,SAChBC,MAAM,8BACC,K,2CAKMH,GACb5G,KAAKgH,mBACLhH,KAAK4C,MAAMqE,gBAAgB,CACvBjC,KAAMhF,KAAK8B,MAAMkD,KACjBC,KAAMjF,KAAK8B,MAAMmD,KACjBd,KAAMnE,KAAK8B,MAAMqC,KACjB9D,KAAML,KAAK8B,MAAMzB,OAErB4F,OAAcQ,GAElBG,EAAMM,mB,yCAGS7G,GACfL,KAAKqC,SAAS,CACV8B,KAAMxE,EAAOuC,aAAa7B,GAAMS,MAAM,GAAI,GAC1CT,KAAMV,EAAO6G,aAAanG,O,+BAK9B,OACI,yBAAKkC,UAAU,eACX,0BAAMA,UAAU,SAAhB,gBACA,8BACI,+BACI,0BAAMA,UAAU,SAAhB,SACA,2BAAOyC,KAAK,OAAOzC,UAAU,mBAAmB4E,KAAK,OAAOvH,MAAOI,KAAK8B,MAAMkD,KAAMoC,YAAY,uBAC/FC,SAAUrH,KAAKqG,wBAEpB,+BACI,0BAAM9D,UAAU,SAAhB,gBACA,8BAAUyC,KAAK,OAAOzC,UAAU,mBAAmB4E,KAAK,OAAOvH,MAAOI,KAAK8B,MAAMmD,KAAMmC,YAAY,8BAClGC,SAAUrH,KAAKqG,wBAEpB,+BACI,0BAAM9D,UAAU,SAAhB,cACA,kBAAC,IAAD,CAAYA,UAAU,mBAAmB8E,SAAUrH,KAAKuG,mBACxDe,SAAU3H,EAAO4B,sBAAsBvB,KAAK8B,MAAMzB,KAAML,KAAK8B,MAAMqC,MACnEvE,MAAOI,KAAK8B,MAAMzB,KAAO,IAAML,KAAK8B,MAAMqC,KAC1CoD,QAAS,IAAIlG,KACbmG,eAAe,QACfC,WAAW,QACXC,WAAW,aACXC,eAAa,KAGjB,2BAAOpF,UAAU,SAASC,MAAM,WAAW2E,KAAK,SAASvH,MAAM,MAAM+C,QAAS3C,KAAKoG,uBACnF,2BAAO7D,UAAU,eAAeC,MAAM,eAAe2E,KAAK,SAASvH,MAAM,QAAQ+C,QAAS3C,KAAKsG,4B,GAtGvFxD,IAAMC,W,QCWnB6E,E,kLAfP5H,KAAK4C,MAAMyE,SAASrH,KAAK4C,MAAMiF,S,+BAIlC,IAAD,OACUC,EAAc9H,KAAK4C,MAAMmF,KAAKC,YAAe,eAAiB,sCACpE,OACI,yBAAKzF,UAAWuF,EAAYnF,QAAS,WAAQ,EAAKsF,kBAAkBC,KAAK,KACrE,8BAAOlI,KAAK4C,MAAMmF,KAAK/C,MACvB,2BAAOmC,KAAK,WAAWgB,QAASnI,KAAK4C,MAAMmF,KAAKK,UAAWf,SAAU,oB,GAZ3DvE,IAAMC,WCqCjBsF,E,kDAjCX,WAAYzF,GACX,IAAD,8BACI,cAAMA,IAEDd,MAAQ,CACTwG,SAAU,EAAK1F,MAAM0F,SAASxH,MAAM,EAAG,EAAK8B,MAAM0F,SAASxB,SAG/D,EAAKyB,iBAAmB,EAAKA,iBAAiBnF,KAAtB,gBAP5B,E,6DAUiByE,GACb,IAAIW,EAAK,YAAOxI,KAAK8B,MAAMwG,UAC3BE,EAAMX,GAAOO,WAAaI,EAAMX,GAAOO,UACvCpI,KAAKqC,SAAS,CAACiG,SAAUE,IACzBxI,KAAK4C,MAAM6F,iBAAiBD,K,+BAI/B,IAAD,OACI,OACI,yBAAKjG,UAAU,oBACX,0BAAMA,UAAU,SAAhB,YACA,wBAAIA,UAAU,QACVvC,KAAK8B,MAAMwG,SAAS9C,KAAI,SAACuC,EAAMF,GAAP,OACpB,kBAAC,EAAD,CAAapC,IAAKoC,EAAOA,MAAOA,EAAOE,KAAMA,EAAMV,SAAU,EAAKkB,4B,GA3B7DzF,IAAMC,WCM7B2F,E,WAEJ,aAAe,oBACb1I,KAAKuF,MAAQ,G,4DAQbvF,KAAKuF,MAAQ,GAGb,IAAK,IAAIoD,EAAI,EAAGA,EAAI,IAAKA,EACvB3I,KAAKuF,MAAMqD,KAAK,CACd5D,KAAM6D,OAAO,IAAMF,EAAI,SACvB1D,KAAM0D,EACNxE,KAAM,GACN9D,KAAM,KAGV,SAASyI,EAAaC,EAAKC,GAGzB,OAFAD,EAAMtH,KAAKwH,KAAKF,GAChBC,EAAMvH,KAAKG,MAAMoH,GACVvH,KAAKG,MAAMH,KAAKyH,UAAYF,EAAMD,EAAM,IAAMA,EAGvD,SAASI,IACP,IAAMC,EAAM,IAAI/H,KACTgI,EAAyBD,EAAI7I,WAAa,EAA/B+I,EAAkCF,EAAI7I,WAAa,EACrE,OAAOZ,EAAOW,WAAWwI,EAAaO,EAAWC,GAAYR,EAAa,EAAG,IAAK,GAAGhI,MAAM,GAAI,GAGjG,SAASyI,IACP,IAAMH,EAAM,IAAI/H,KADM,EAEO,CAAC+H,EAAIzI,UAAWyI,EAAIzI,UAAY,GAAtD6I,EAFe,KAELC,EAFK,KAGtB,OAAO9J,EAAOe,WAAWoI,EAAaU,EAAUC,GAAWL,EAAIxI,WAAa,EAAGwI,EAAIvI,eAGrF,IAAK,IAAI8H,EAAI,EAAGA,EAAI3I,KAAKuF,MAAMuB,OAAS,IAAK6B,EAAG,CAC9C,IAAI3E,EAAOhE,KAAKuF,MAAMoD,GACtB3E,EAAKG,KAAOgF,IACZnF,EAAK3D,KAAOkJ,IACZvF,EAAK0F,YAAa,EAIpB,IADA,IAAMN,EAAM,IAAI/H,KACPsH,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,IAAMgB,EAAI,IAAItI,KACdsI,EAAEC,WAAWR,EAAI5I,aAAemI,EAAI,GACpC,IAAMxE,EAAOxE,EAAOuC,aAAayH,GAAG7I,MAAM,GAAI,GAC9Cd,KAAKuF,MAAMqD,KAAK,CAAC5D,KAAM,SAAW2D,EAAI,GAAI1D,KAAM,GAAId,KAAMA,EAAM9D,KAAM,eAGxE,IAAK,IAAIsI,EAAI,EAAGA,EAAI3I,KAAKuF,MAAMuB,SAAU6B,EACvC3I,KAAKuF,MAAMoD,GAAGlD,IAAMkD,EAGtB3I,KAAK6J,c,kCAIL,IAAMC,EAAgB,SAAC9F,GAErB,OADarE,EAAO4B,sBAAsByC,EAAK3D,KAAM2D,EAAKG,MAC5C,IAAI9C,MAGhB0I,EAAS/J,KAAKuF,MAAMyE,QAAO,SAAChG,GAAD,OAAU8F,EAAc9F,GAAQ,KAC/D+F,EAAOE,MAAK,SAACC,EAAOC,GAAR,OAAmBL,EAAcI,GAASJ,EAAcK,MAEpE,IAAIC,EAASpK,KAAKuF,MAAMyE,QAAO,SAAChG,GAAD,OAAU8F,EAAc9F,IAAS,KAChEoG,EAAOH,MAAK,SAACC,EAAOC,GAAR,OAAmBL,EAAcK,GAAUL,EAAcI,MAErElK,KAAKuF,MAAQwE,EAAOM,OAAOD,K,8BAGrBpG,IACN,SAAiBuB,GACf,IAAIyD,EAAM,EACW,IAAjBzD,EAAMuB,SACRkC,EAAMzD,EAAM,GAAGE,KAHK,oBAKLF,GALK,IAKtB,2BAAwB,CAAC,IAAhBvB,EAAe,QACtBgF,EAAMvH,KAAKuH,IAAIhF,EAAKyB,IAAKuD,IANL,8BAQtBhF,EAAKyB,IAAMuD,EAAM,EARnB,CASGhJ,KAAKuF,OAERvF,KAAKuF,MAAMqD,KAAK5E,GAChBhE,KAAK6J,c,iCAGI7F,GACT,IAAI6D,EAAQ7H,KAAKuF,MAAM+E,QAAQtG,GAC/BhE,KAAKuF,MAAMgF,OAAO1C,EAAO,O,KAIvB2C,E,WACJ,WAAYC,GAAK,IAAD,2BACdzK,KAAKyK,GAAKA,EAEVzK,KAAKsI,SAAW,CACdoC,WAAW,EACXlC,MAAO,CACL,CAACxD,KAAM,gBAAiBoD,WAAW,EAAOJ,aAAa,GACvD,CAAChD,KAAM,QAASoD,WAAW,EAAMJ,aAAa,KAIlDhI,KAAK2K,8BAAgC3K,KAAK2K,8BAA8BvH,KAAKpD,MAC7EA,KAAK2K,gCAEL3K,KAAKsI,SAASE,MAAM,GAAGR,iBAAyBvB,IAAVmE,MAEtC5K,KAAK6K,sBAAwBzI,aAAY,WACvC,EAAKqI,GAAGZ,cACP,K,4EAG4B,IAAD,OACxBiB,OAAgCrE,IAAjBsE,aACrB/K,KAAKsI,SAASE,MAAM,GAAGR,YAAc8C,EACjCA,GACFC,aAAaC,oBACVC,MAAK,WAAQ,EAAK3C,SAASE,MAAM,GAAGJ,UAAyC,YAA5B2C,aAAaG,cAC9DC,OAAM,WAAO,EAAK7C,SAASE,MAAM,GAAGJ,WAAY,O,0CAKrD,GAAIpI,KAAKsI,SAASE,MAAM,GAAGR,aAAehI,KAAKsI,SAASE,MAAM,GAAGJ,UAAW,CAC1E,IAAIpE,EAAOhE,KAAKyK,GAAGlF,MAAM6F,MAAK,SAAApH,GAAI,OAAKrE,EAAOuE,wBAAwBF,EAAK3D,KAAM2D,EAAKG,MAAMzC,GAAK,IAAQsC,EAAK0F,cAC9G,GAAI1F,EACiB,IAAI+G,aAAa/G,EAAKgB,KAAM,CAC7CqG,KAAMrH,EAAKiB,OAEAqG,QAAU,SAAC7H,KAM5BzD,KAAKyK,GAAGlF,MAAMgG,SAAQ,SAAAvH,GAChBrE,EAAOuE,wBAAwBF,EAAK3D,KAAM2D,EAAKG,MAAMzC,GAAK,IAAGsC,EAAK0F,YAAa,MAErF1J,KAAKyK,GAAGZ,c,uCAGOrB,GACfxI,KAAKsI,SAASoC,WAAY,GAErB1K,KAAKsI,SAASE,MAAM,GAAGJ,WAAaI,EAAM,GAAGJ,WAChDpI,KAAK2K,gCAGP3K,KAAKsI,SAASE,MAAM,GAAGJ,UAAYI,EAAM,GAAGJ,c,KA4IjCoD,E,kDAvIb,aAAe,IAAD,8BACZ,gBAEKf,GAAK,IAAI/B,EAEd,EAAK+C,MAAQ,IAAIjB,EAAM,EAAKC,IAE5B,EAAK3I,MAAQ,GAEb,EAAK4J,QAAU,CACbC,QAAS,EACTC,SAAU,EACV1G,MAAO,GAETwB,OAAOmF,OAAO,EAAKH,SAEnB,EAAKI,yBAA2B,EAAKA,yBAAyB1I,KAA9B,gBAEhC,EAAK2I,kBAAoB,EAAKA,kBAAkB3I,KAAvB,gBACzB,EAAK4I,kBAAoB,EAAKA,kBAAkB5I,KAAvB,gBAEzB,EAAK6I,uBAAyB,EAAKA,uBAAuB7I,KAA5B,gBAE9B,EAAK8I,qBAAuB,EAAKA,qBAAqB9I,KAA1B,gBAE5B,EAAKmF,iBAAmB,EAAKA,iBAAiBnF,KAAtB,gBAExB,EAAKtB,MAAMqK,aAAe,CAAC,EAAKT,QAAQxG,OAGxC,EAAKkH,cAAgB,EAAKA,cAAchJ,KAAnB,gBACrB,EAAKiJ,WAAa,EAAKA,WAAWjJ,KAAhB,gBAClB,EAAKkJ,UAAY,EAAKA,UAAUlJ,KAAf,gBAhCL,E,gEAmCO,IAAD,OAClBpD,KAAK6K,sBAAwBzI,aAAY,WACvC,EAAKqJ,MAAMc,oBACX,EAAKC,gBACJ,O,6CAIHlK,cAActC,KAAK6K,yB,6CAGE7G,GACrBhE,KAAKyK,GAAGgC,WAAWzI,GACnBhE,KAAKqC,SAASrC,Q,2CAGKgE,GACnBhE,KAAKyK,GAAGkB,QAAQ3H,GAChBhE,KAAKsM,c,sCAIL,OAAOtM,KAAK8B,MAAMqK,aAAanM,KAAK8B,MAAMqK,aAAarF,OAAS,K,iCAGvD4F,GACT1M,KAAK8B,MAAMqK,aAAavD,KAAK8D,GAC7B1M,KAAKqC,SAAS,CAAC8J,aAAcnM,KAAK8B,MAAMqK,iB,kCAIxCnM,KAAK8B,MAAMqK,aAAaQ,MACxB3M,KAAKqC,SAAS,CAAC8J,aAAcnM,KAAK8B,MAAMqK,iB,iDAIpCnM,KAAKoM,kBAAoBpM,KAAK0L,QAAQE,WACxC5L,KAAKyL,MAAMnD,SAASoC,WAAY,EAChC1K,KAAKqM,WAAWrM,KAAK0L,QAAQE,a,0CAK3B5L,KAAKoM,kBAAoBpM,KAAK0L,QAAQxG,MACxClF,KAAKqM,WAAWrM,KAAK0L,QAAQC,SACpB3L,KAAKoM,kBAAoBpM,KAAK0L,QAAQE,UAC/C5L,KAAKsM,c,0CAKHtM,KAAKoM,kBAAoBpM,KAAK0L,QAAQxG,OACxClF,KAAKsM,c,uCAIQ9D,GACfxI,KAAKyL,MAAMlD,iBAAiBC,GAC5BxI,KAAKwM,gB,+BAIL,IAAII,EAAW,WACb,OAAQ5M,KAAKoM,iBACX,KAAKpM,KAAK0L,QAAQC,QAChB,OAAQ,kBAAC,EAAD,CAAe1E,gBAAiBjH,KAAKkM,uBAC/C,KAAKlM,KAAK0L,QAAQE,SAChB,OAAQ,kBAAC,EAAD,CAAgBtD,SAAUtI,KAAKyL,MAAMnD,SAASE,MACpDC,iBAAkBzI,KAAKuI,mBAC3B,KAAKvI,KAAK0L,QAAQxG,MAChB,OAAQ,kBAAC,EAAD,CAAOK,MAAOvF,KAAKyK,GAAGlF,MAAOF,aAAcrF,KAAKiM,2BAG3D/D,KAAKlI,MASR,IAAM6M,EAAQ,CACZlK,QAAS3C,KAAK+L,kBACdhG,UATF,WAEE,GADmB/F,KAAKoM,kBACLpM,KAAK0L,QAAQxG,MAC9B,OAAO,GAMoBgD,KAAKlI,OAGpC,OACE,yBAAKuC,UAAU,QACb,kBAAC,EAAD,CACAM,mBAAoB7C,KAAK8L,2BACxBc,EACD,kBAAC,EAAD,CACA5G,KAAQ6G,EACR/G,KAAQ,CAACnD,QAAS3C,KAAKgM,kBAAmBjG,UAAY/F,KAAKoM,kBAAoBpM,KAAK0L,QAAQxG,c,GAlIlFpC,IAAMC,W,OCrKxB+J,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.0d31a207.chunk.js","sourcesContent":["class MyTime {\r\n    /*\r\n        MyTime (time) is a string in format: hh:mm:ss\r\n        MyTime (date) is a string in format: dd-mm-yyyy\r\n        MyTime (named date) is a string in format: <day name> <month name> <year>\r\n    */\r\n\r\n    static ShiftZero(value) {\r\n        return (value < 10) ? \"0\" + value : value;\r\n    }\r\n\r\n    static MakeMyDate(day = 1, month = 0, year = 1){\r\n        return this.ShiftZero(day) + \"-\" + this.ShiftZero(month) + \"-\" + this.ShiftZero(year);\r\n    }\r\n\r\n    static MakeMyTime(hours = 0, minutes = 0, seconds = 0) {\r\n        return this.ShiftZero(hours) + \":\" + this.ShiftZero(minutes) + \":\" + this.ShiftZero(seconds);\r\n    }\r\n\r\n    static DateToMyTime(date) {\r\n        return this.MakeMyTime(date.getHours(), date.getMinutes(), date.getSeconds());\r\n    }\r\n\r\n    static DateToMyDate(date) {\r\n        return this.MakeMyDate(date.getDate(), date.getMonth() + 1, date.getFullYear());\r\n    }\r\n    \r\n    static DateToMyDateNamed(date) {\r\n        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n            const months  = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n            let month = (months[date.getMonth() - 1]).slice(0, 3);\r\n            let day = (days[date.getDay()]).slice(0, 3);\r\n            return `${day} ${month} ${date.getFullYear()}`;\r\n    }\r\n\r\n    static MyDateAndMyTimeToDate(my_date, my_time) {\r\n        my_date = my_date.split('-').reverse().join('-');\r\n        return new Date(my_date + \"T\" + my_time);\r\n    }\r\n\r\n    static MyDateAndMyTimeUntilNow(my_date, my_time) {\r\n        const date = this.MyDateAndMyTimeToDate(my_date, my_time);\r\n        const in_ms = date - new Date();\r\n\r\n        const sign = Math.sign(in_ms);\r\n\r\n        let ms = in_ms;\r\n        ms = Math.abs(ms);\r\n        const hours = Math.floor(ms / (3600 * 1000));\r\n        ms -= hours * 3600 * 1000;\r\n\r\n        const minutes = Math.floor(ms / (60 * 1000));\r\n        ms -= minutes * 60 * 1000;\r\n\r\n        const seconds = Math.floor(ms / 1000);\r\n\r\n        return {\r\n            ms: in_ms,\r\n            seconds: seconds * sign,\r\n            minutes: minutes * sign,\r\n            hours: hours * sign\r\n        }\r\n    }\r\n}\r\n\r\nexport default MyTime;","import React from 'react';\r\n\r\nimport * as icons from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport MyTime from '../../MyTime'\r\n\r\nclass Header extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            curDate: MyTime.DateToMyDateNamed(new Date()),\r\n            curTime: MyTime.DateToMyTime(new Date())\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => {\r\n            this.setState({curDate: MyTime.DateToMyDateNamed(new Date())});\r\n            this.setState({curTime: MyTime.DateToMyTime(new Date())});\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <div className=\"header--controls\">\r\n                    <span className=\"button\" title=\"Idk\"><FontAwesomeIcon icon={icons.faList} /></span>\r\n                    <span className=\"button\" title=\"Settings\"\r\n                    onClick={() => {this.props.onSettingsBtnClick()}}><FontAwesomeIcon icon={icons.faCog} /></span>\r\n                </div>\r\n                <div className=\"header--time\">\r\n                    <span className=\"time--date\">{this.state.curDate}</span>\r\n                    <span className=\"time--time\">{this.state.curTime}</span>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport * as icons from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport MyTime from '../../MyTime';\r\n\r\nclass ItemTask extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isExpanded: false,\r\n            swipe: null\r\n        }\r\n\r\n        this.OnMouseDownHandler= this.OnMouseDownHandler.bind(this);\r\n        this.OnMouseUpHandler = this.OnMouseUpHandler.bind(this);\r\n        this.OnMouseMoveHandler = this.OnMouseMoveHandler.bind(this);\r\n        this.OnMouseLeaveHandler = this.OnMouseLeaveHandler.bind(this);\r\n        this.TimeIconData = this.TimeIconData.bind(this);\r\n    }\r\n\r\n    OnMouseDownHandler(e) {\r\n        this.setState({ swipe: {offset: 0, last_x: e.screenX}});\r\n    }\r\n\r\n    OnMouseLeaveHandler(e) {\r\n        this.setState({swipe: null});\r\n    }\r\n\r\n    OnMouseUpHandler(e) {\r\n        if (this.state.swipe) {\r\n            const is_expanded = (this.state.swipe.offset === 0) ? !this.state.isExpanded : this.state.isExpanded;\r\n            this.setState({\r\n                swipe: null,\r\n                isExpanded: is_expanded\r\n            });\r\n        }\r\n    }\r\n\r\n    OnMouseMoveHandler(e) {\r\n        if (this.state.swipe) {\r\n            const x = this.state.swipe.last_x;\r\n            const offset = this.state.swipe.offset + (e.screenX - x);\r\n            const max_offset = 150;\r\n            if (Math.abs(offset) > max_offset) {\r\n                this.props.onSwipe(this.props.task);\r\n                this.setState({swipe: null}); //ODD\r\n            } else {\r\n                this.setState({ swipe: {offset: offset, last_x: e.screenX}});\r\n            }\r\n        }\r\n    }\r\n\r\n    TimeUntilNow(my_date, my_time)\r\n    {\r\n        return MyTime.MyDateAndMyTimeToDate(my_date, my_time) - new Date();\r\n    }\r\n\r\n    TimeIconData()\r\n    {\r\n        const time_left = MyTime.MyDateAndMyTimeUntilNow(this.props.task.date, this.props.task.time);\r\n\r\n        const hours_str = (time_left.hours) ? time_left.hours + \" hours\" : \"\";\r\n        const minutes_str = (time_left.minutes) ? time_left.minutes + \" minutes\" : \"\";\r\n        \r\n        let color = \"#00FF00\";\r\n        if (time_left.ms < 0) {\r\n            color = \"#000000\";\r\n        } else {\r\n            const green = (time_left.hours > 1) ? \"A0\" : \"00\" ;\r\n            const red = (time_left.hours <= 1) ? \"FF\" : \"00\";\r\n            color = \"#\" + red + green + \"00\";\r\n        }\r\n\r\n        return {\r\n            title: hours_str + \" \" + minutes_str,\r\n            color: color\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const desc_class = (this.state.isExpanded) ? \"item-task__desc\" : \"item-task__desc--hidden\";\r\n        const style = (this.state.swipe) ? {marginLeft: this.state.swipe.offset} : {};\r\n\r\n        let time_icon = this.TimeIconData();\r\n        return(\r\n            <div style={style} className=\"item-task\"\r\n            onMouseDown={this.OnMouseDownHandler} onMouseUp={this.OnMouseUpHandler} onMouseMove={this.OnMouseMoveHandler}\r\n            onMouseLeave={this.OnMouseLeaveHandler}>\r\n                <span className=\"item-task__top\">\r\n                        <span className=\"item-task__name\">{this.props.task.name}</span>\r\n                        <FontAwesomeIcon className=\"item-task__time-icon\" title={time_icon.title} icon={icons.faClock}\r\n                         style={{color: time_icon.color}}></FontAwesomeIcon>\r\n                    </span>\r\n                <span className=\"item-task__date-time\">\r\n                    <span className=\"item-task__date\">{this.props.task.date}</span>\r\n                    <span className=\"item-task__time\">{this.props.task.time}</span>\r\n                </span>\r\n                <span className={desc_class}>{this.props.task.desc}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemTask;","import React from 'react';\r\n\r\nimport ItemTask from '../ItemTask/ItemTask'\r\n\r\nclass Inbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.OnItemSwipeHandler = this.OnItemSwipeHandler.bind(this);\r\n        this.OnMouseWheel = this.OnMouseWheel.bind(this);\r\n    }\r\n\r\n    OnItemSwipeHandler(task) {\r\n        this.props.onRemoveTask(task);\r\n    }\r\n\r\n    OnMouseWheel(e) {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onWheel={this.OnMouseWheel} className=\"inbox\">\r\n                <span className=\"title\">Inbox</span>\r\n                <ol className=\"list\">{\r\n                    this.props.tasks.map(task =>\r\n                        (<ItemTask onSwipe={this.OnItemSwipeHandler} task={task} key={task.key}></ItemTask>))}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inbox;","import React from 'react';\r\n\r\nimport * as icons from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        const r_btn_icon = icons.faPlus;\r\n        return (\r\n            <div className=\"footer\" style={{zIndex:'999999'}}>\r\n                <span className=\"button--left\" title=\"Back\" style={{visibility: (this.props.lBtn.isVisible) ? 'visible' : 'hidden'}}\r\n                onClick={() => {this.props.lBtn.onClick()}}>\r\n                    <FontAwesomeIcon icon={icons.faArrowLeft}></FontAwesomeIcon>\r\n                </span>\r\n                <span className=\"button--right\" title=\"Add new task\" style={{visibility: (this.props.rBtn.isVisible) ? 'visible' : 'hidden'}}\r\n                onClick={() => {this.props.rBtn.onClick()}}>\r\n                    <FontAwesomeIcon icon={r_btn_icon}></FontAwesomeIcon>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport MyTime from '../../MyTime';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nvar g_old_state = null;\r\n\r\nclass AddTaskScreen extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = this.DefaultState();\r\n\r\n        this.OnSubmitClickHandler = this.OnSubmitClickHandler.bind(this);\r\n        this.OnInputChangeHandler = this.OnInputChangeHandler.bind(this);\r\n        this.OnClearClickHandler = this.OnClearClickHandler.bind(this);\r\n        this.OnDatePickerChange = this.OnDatePickerChange.bind(this);\r\n    }\r\n\r\n    DefaultState()\r\n    {\r\n        return {\r\n            name: \"\",\r\n            desc: \"\",\r\n            date: MyTime.DateToMyDate(new Date()),\r\n            time: MyTime.DateToMyTime(new Date()).slice(0, -3),\r\n        }\r\n    }\r\n\r\n    OnClearClickHandler() {\r\n        this.setState(this.DefaultState());\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        if (g_old_state !== undefined) {\r\n            g_old_state = {};\r\n            Object.assign(g_old_state, this.state);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (g_old_state) {\r\n            this.setState(g_old_state);\r\n        } else {\r\n            g_old_state = null;\r\n        }\r\n    }\r\n\r\n    OnInputChangeHandler(event) {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    ValidateInputs() {\r\n        if (this.state.name.length === 0) {\r\n            alert(\"You must enter task name!\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    OnSubmitClickHandler(event) {\r\n        if (this.ValidateInputs()) {\r\n            this.props.onSubmitHandler({\r\n                name: this.state.name,\r\n                desc: this.state.desc,\r\n                time: this.state.time,\r\n                date: this.state.date\r\n            });\r\n            g_old_state = undefined;\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    OnDatePickerChange(date) {\r\n        this.setState({\r\n            time: MyTime.DateToMyTime(date).slice(0, -3),\r\n            date: MyTime.DateToMyDate(date)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"screen--a-t\">\r\n                <span className=\"title\">Add new task</span>\r\n                <form>\r\n                    <label>\r\n                        <span className=\"label\">Name:</span>\r\n                        <input name=\"name\" className=\"input text-input\" type=\"text\" value={this.state.name} placeholder=\"Enter task name here\"\r\n                         onChange={this.OnInputChangeHandler}></input>\r\n                    </label>\r\n                    <label>\r\n                        <span className=\"label\">Description:</span>\r\n                        <textarea name=\"desc\" className=\"input text-input\" type=\"text\" value={this.state.desc} placeholder=\"Enter task description here\"\r\n                         onChange={this.OnInputChangeHandler}></textarea>\r\n                    </label>\r\n                    <label>\r\n                        <span className=\"label\">Pick time:</span>\r\n                        <DatePicker className=\"input text-input\" onChange={this.OnDatePickerChange}\r\n                        selected={MyTime.MyDateAndMyTimeToDate(this.state.date, this.state.time)}\r\n                        value={this.state.date + \" \" + this.state.time}\r\n                        minDate={new Date()}\r\n                        timeInputLabel=\"Time:\"\r\n                        timeFormat=\"hh:mm\"\r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                        showTimeInput>\r\n                        </DatePicker>\r\n                    </label>\r\n                    <input className=\"button\" title=\"Add task\" type=\"submit\" value=\"Add\" onClick={this.OnSubmitClickHandler}/>\r\n                    <input className=\"button clear\" title=\"Clear fields\" type=\"button\" value=\"Clear\" onClick={this.OnClearClickHandler}></input>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTaskScreen;","import React from 'react';\r\n\r\nclass ItemSetting extends React.Component\r\n{\r\n    OnCheckboxHandler() {\r\n        this.props.onChange(this.props.index);\r\n    }\r\n\r\n    render()\r\n    {\r\n        const class_name = (this.props.item.isSupported) ? \"item-setting\" : \"item-setting item-setting--disabled\";\r\n        return (\r\n            <div className={class_name} onClick={() => { this.OnCheckboxHandler.call(this); }}>\r\n                <span>{this.props.item.name}</span>\r\n                <input type=\"checkbox\" checked={this.props.item.isAllowed} onChange={() => {}}></input>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemSetting;","import React from 'react';\r\n\r\nimport ItemSetting from '../ItemSetting/ItemSetting'\r\n\r\nclass SettingsScreen extends React.Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            settings: this.props.settings.slice(0, this.props.settings.length)\r\n        }\r\n\r\n        this.OnSettingsChange = this.OnSettingsChange.bind(this);\r\n    }\r\n\r\n    OnSettingsChange(index) {\r\n        let items = [...this.state.settings];\r\n        items[index].isAllowed = !items[index].isAllowed;\r\n        this.setState({settings: items});\r\n        this.props.onSettingsChange(items);\r\n    }\r\n \r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"screen--settings\">\r\n                <span className=\"title\">Settings</span>\r\n                <ol className=\"list\">{\r\n                    this.state.settings.map((item, index) => (\r\n                        <ItemSetting key={index} index={index} item={item} onChange={this.OnSettingsChange}></ItemSetting>\r\n                    ))\r\n                }</ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SettingsScreen;","import React from 'react';\n\nimport Header from './components/Header/Header';\nimport Inbox from './components/Inbox/Inbox'\nimport Footer from './components/Footer/Footer';\nimport AddTaskScreen from './components/AddTaskScreen/AddTaskScreen'\nimport SettingsScreen from './components/SettingsScreen/SettingsScreen'\n\nimport MyTime from './MyTime';\n\nclass DB\n{\n  constructor() {\n    this.tasks = [];\n    //this.GenerateTasks();\n  }\n\n  /*************************************************************************** \n      Testing code!!! You must remove it!\n  ****************************************************************************/\n  GenerateTasks() {\n    this.tasks = [\n    ];\n\n    for (let i = 0; i < 5; ++i){\n      this.tasks.push({\n        name: String(100 + i + \" test\"),\n        desc: i,\n        time: \"\",\n        date: \"\"\n      });\n    }\n    function GetRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    function GenerateTime() {\n      const now = new Date();\n      const [min_hours, max_hours] = [now.getHours() + 1, now.getHours() + 3];\n      return MyTime.MakeMyTime(GetRandomInt(min_hours, max_hours), GetRandomInt(0, 59), 0).slice(0, -3);\n    }\n\n    function GenerateDate() {\n      const now = new Date();\n      const [min_date, max_date] = [now.getDate(), now.getDate() + 1];\n      return MyTime.MakeMyDate(GetRandomInt(min_date, max_date), now.getMonth() + 1, now.getFullYear());\n    }\n\n    for (let i = 0; i < this.tasks.length - 2; ++i) {\n      let task = this.tasks[i];\n      task.time = GenerateTime();\n      task.date = GenerateDate();\n      task.isNotified = false;\n    }\n\n    const now = new Date();\n    for (let i = 0; i < 5; ++i) {\n      const m = new Date();\n      m.setMinutes(now.getMinutes() + i + 1);\n      const time = MyTime.DateToMyTime(m).slice(0, -3);\n      this.tasks.push({name: \"Task \" + (i + 1), desc: \"\", time: time, date: \"19-09-2020\"});\n    }\n    \n    for (let i = 0; i < this.tasks.length; ++i) {\n      this.tasks[i].key = i;\n    }\n\n    this.SortTasks();\n  }\n  /**************************************************************** */\n  SortTasks() {\n    const UntileNowTime = (task) => {\n      const date = MyTime.MyDateAndMyTimeToDate(task.date, task.time);\n      return date - new Date();\n    }\n\n    let active = this.tasks.filter((task) => UntileNowTime(task) > 0);\n    active.sort((first, second) => UntileNowTime(first) - UntileNowTime(second));;\n\n    let failed = this.tasks.filter((task) => UntileNowTime(task) <= 0);\n    failed.sort((first, second) => UntileNowTime(second) - UntileNowTime(first));;\n\n    this.tasks = active.concat(failed);\n  }\n\n  AddTask(task) {\n    (function AddKey(tasks) {\n      let max = 0;\n      if (tasks.length !== 0) {\n        max = tasks[0].key;\n      }\n      for (let task of tasks) {\n        max = Math.max(task.key, max);\n      }\n      task.key = max + 1;\n    })(this.tasks);\n\n    this.tasks.push(task);\n    this.SortTasks();\n  }\n\n  RemoveTask(task) {\n    let index = this.tasks.indexOf(task);\n    this.tasks.splice(index, 1);\n  }\n}\n\nclass Logic {\n  constructor(db) {\n    this.db = db;\n    \n    this.settings = {\n      isChanged: false,\n      items: [\n        {name: \"Notifications\", isAllowed: false, isSupported: false},\n        {name: \"Sound\", isAllowed: true, isSupported: false}\n      ]\n    }\n\n    this.RequestNotificationPermission = this.RequestNotificationPermission.bind(this);\n    this.RequestNotificationPermission();\n\n    this.settings.items[1].isSupported = (Audio !== undefined);\n\n    this.notification_interval = setInterval(() => {\n      this.db.SortTasks();\n    }, 1000 * 5);\n  }\n\n  RequestNotificationPermission() {\n    const is_supported = Notification !== undefined;\n    this.settings.items[0].isSupported = is_supported;\n    if (is_supported) {\n      Notification.requestPermission()\n        .then(() => { this.settings.items[0].isAllowed = (Notification.permission === 'granted');} )\n        .catch(() => {this.settings.items[0].isAllowed = false;});\n    }\n  }\n\n  ShowNotifications() {\n    if (this.settings.items[0].isSupported && this.settings.items[0].isAllowed) {\n      let task = this.db.tasks.find(task => (MyTime.MyDateAndMyTimeUntilNow(task.date, task.time).ms < 0) && (!task.isNotified));\n      if (task) {\n        let notification = new Notification(task.name, {\n          body: task.desc\n        });\n        notification.onclick = (e) => {\n          //TODO: GO to user's task or do nothing\n        }\n      } else { }\n    }\n\n    this.db.tasks.forEach(task => {\n      if (MyTime.MyDateAndMyTimeUntilNow(task.date, task.time).ms < 0) task.isNotified = true;\n    });\n    this.db.SortTasks();\n  }\n\n  OnSettingsChange(items) {\n    this.settings.isChanged = true;\n\n    if (!this.settings.items[0].isAllowed && items[0].isAllowed) {\n      this.RequestNotificationPermission();\n    }\n\n    this.settings.items[1].isAllowed = items[1].isAllowed;\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.db = new DB();\n\n    this.logic = new Logic(this.db);\n\n    this.state = {};\n\n    this.Screens = {\n      AddTask: 0,\n      Settings: 1,\n      Inbox: 2\n    };\n    Object.freeze(this.Screens);\n\n    this.HeaderSettingsBtnHandler = this.HeaderSettingsBtnHandler.bind(this);\n\n    this.FooterRBtnHandler = this.FooterRBtnHandler.bind(this);\n    this.FooterLBtnHandler = this.FooterLBtnHandler.bind(this);\n\n    this.InboxRemoveTaskHandler = this.InboxRemoveTaskHandler.bind(this);\n\n    this.AddTaskSubmitHandler = this.AddTaskSubmitHandler.bind(this);\n\n    this.OnSettingsChange = this.OnSettingsChange.bind(this);\n\n    this.state.screen_stack = [this.Screens.Inbox];\n    //this.state.screen_stack.push(this.Screens.Settings);\n\n    this.CurrentScreen = this.CurrentScreen.bind(this);\n    this.PushScreen = this.PushScreen.bind(this);\n    this.PopScreen = this.PopScreen.bind(this);\n  }\n\n  componentDidMount() {\n    this.notification_interval = setInterval(() => {\n      this.logic.ShowNotifications();\n      this.forceUpdate();\n    }, 1000 * 30);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.notification_interval);\n  }\n\n  InboxRemoveTaskHandler(task) {\n    this.db.RemoveTask(task);\n    this.setState(this);\n  }\n\n  AddTaskSubmitHandler(task) {\n    this.db.AddTask(task);\n    this.PopScreen();\n  }\n\n  CurrentScreen() {\n    return this.state.screen_stack[this.state.screen_stack.length - 1];\n  }\n\n  PushScreen(screen) {\n    this.state.screen_stack.push(screen);\n    this.setState({screen_stack: this.state.screen_stack});\n  }\n\n  PopScreen() {\n    this.state.screen_stack.pop();\n    this.setState({screen_stack: this.state.screen_stack});    \n  }\n\n  HeaderSettingsBtnHandler() {\n    if (this.CurrentScreen() !== this.Screens.Settings) {\n      this.logic.settings.isChanged = false;\n      this.PushScreen(this.Screens.Settings);\n    }\n  }\n\n  FooterRBtnHandler() {\n    if (this.CurrentScreen() === this.Screens.Inbox) {\n      this.PushScreen(this.Screens.AddTask);\n    } else if (this.CurrentScreen() === this.Screens.Settings) {\n      this.PopScreen();\n    }\n  }\n\n  FooterLBtnHandler() {\n    if (this.CurrentScreen() !== this.Screens.Inbox) {\n      this.PopScreen();\n    }\n  }\n\n  OnSettingsChange(items) {\n    this.logic.OnSettingsChange(items);\n    this.forceUpdate();\n  }\n\n  render() {\n    let content = (function RenderContent() {\n      switch (this.CurrentScreen()) {\n        case this.Screens.AddTask:\n          return (<AddTaskScreen onSubmitHandler={this.AddTaskSubmitHandler}></AddTaskScreen>);\n        case this.Screens.Settings:\n          return (<SettingsScreen settings={this.logic.settings.items}\n            onSettingsChange={this.OnSettingsChange}></SettingsScreen>);\n        case this.Screens.Inbox:\n          return (<Inbox tasks={this.db.tasks} onRemoveTask={this.InboxRemoveTaskHandler}></Inbox>)\n        default: break;\n      }\n    }).call(this);\n\n    function DisplayFooterRBtn() {\n      const cur_screen = this.CurrentScreen();\n      if (cur_screen === this.Screens.Inbox) {\n        return true;\n      }\n    }\n\n    const r_btn = {\n      onClick: this.FooterRBtnHandler,\n      isVisible: DisplayFooterRBtn.call(this),\n    }\n\n    return (\n      <div className=\"todo\">\n        <Header\n        onSettingsBtnClick={this.HeaderSettingsBtnHandler}></Header>\n        {content}\n        <Footer\n        rBtn = {r_btn}\n        lBtn = {{onClick: this.FooterLBtnHandler, isVisible: (this.CurrentScreen() !== this.Screens.Inbox)}}></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}